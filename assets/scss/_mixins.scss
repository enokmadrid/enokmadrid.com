@function calculateRem($size) {
  $remSize: calc($size / 16px);
  @return #{$remSize}rem;
}

@mixin fontSize($size) {
  font-size: $size; //Fallback in px
  font-size: calculateRem($size);
}

/*======================================
=                SPACES                =
======================================*/
$space-micro:     4px;
$space-tiny:      8px;
$space-xxsmall:  10px;
$space-xsmall:   12px;
$space-small:    16px;
$space-standard: 24px;
$space-semi:     32px;
$space-large:    48px;
$space-xlarge:   64px;
$space-xxlarge: 128px;

$border-radius-default: 8px;

/*======================================
=             MARGINS SPACES           =
======================================*/
.m-t-sm {
  margin-top: 16px;
}
.m-t-md {
  margin-top: 32px;
}
.m-t-lg {
  margin-top: 64px;
}


/*======================================
=              Z-INDEXES               =
======================================*/
.z-1  { z-index: 1; }
.z-5  { z-index: 5; }
.z-10 { z-index: 10; }
.z-15 { z-index: 15; }
.z-20 { z-index: 20; }
.z-25 { z-index: 25; }


/*======================================
=              BOX SHADOWS             =
======================================*/
/* Box Shadow Values */
$shadow-small:    0 1px 3px 0 rgba(0,0,0,0.1), 0 0 2px 0 rgba(0,0,0,0.06);
$shadow-medium:   0 4px 6px -1px rgba(0,0,0,0.1), 0 2px 4px -1px rgba(0,0,0,0.06);
$shadow-large:    0 10px 15px -3px rgba(0,0,0,0.1), 0 4px 6px -2px rgba(0,0,0,0.06);
$shadow-xlarge:   0 20px 25px -5px rgba(0,0,0,0.1), 0 10px 10px -5px rgba(0,0,0,0.06);
$shadow-xxlarge:  0 25px 50px -12px rgba(0,0,0,0.25), 0 10px 10px -5px rgba(0,0,0,0.04);

$shadow-medium-top:   0 -4px 6px -1px rgba(0,0,0,0.1), 0 2px 4px -1px rgba(0,0,0,0.06);

/* Header Heights */
$height-default:         40px;
$height-expanded:        70px;
$height-expanded-extra: 120px;

/* Cubic Bezier Transitions */
$ease-standard:   cubic-bezier(0.4, 0.0, 0.2, 1.0);
$ease-accelerate: cubic-bezier(0.4, 0.0, 1.0, 1.0);
$ease-decelerate: cubic-bezier(0.0, 0.0, 0.2, 0.1);
$ease-decelerate-fast: cubic-bezier(0.0, 0.0, 0.2, 1.0);

/* Transition Speeds */
$speed-75:   75ms;
$speed-100: 100ms;
$speed-150: 150ms;
$speed-200: 200ms;
$speed-250: 250ms;
$speed-300: 300ms;
$speed-350: 350ms;
$speed-700: 700ms;

/*======================================
=              BREAKPOINTS             =
======================================*/
// media-breakpoint-down(xs) - Extra small devices (portrait phones, less than 576px)
$xs-max: 575.98px;

// media-breakpoint-only(sm) - Small devices (landscape phones, less than 768px)
$sm-min: 576px;
$sm-max: 767.98px;

//media-breakpoint-only(md) - Medium devices (tablets, less than 992px)
$md-min: 768px;
$md-max: 991.98px;

// media-breakpoint-only(lg) - Large devices (desktops, less than 1200px)
$lg-min: 992px;
$lg-max: 1199.98px;

// media-breakpoint-only(xl) - Extra large devices (large desktops, 1200px and up)
$xl-min: 1200px;

@mixin breakpoint($class) {
	@if $class == xs {
		@media (max-width: $xs-max) { @content; }
	} 
	@else if $class == sm {
		@media (min-width: $sm-min) and (max-width: $sm-max) { @content; }
	}
	@else if $class == sm-down {
		@media screen and (max-width: $sm-max) { @content; }
	}
	@else if $class == sm-up {
		@media (min-width: $sm-min) { @content; }
	}
	@else if $class == md {
		@media (min-width: $md-min) and (max-width: $md-max) { @content; }
	}
	@else if $class == md-down {
		@media screen and (max-width: $md-max) { @content; }
	}
	@else if $class == md-up {
		@media (min-width: $md-min) { @content; }
	}
	@else if $class == lg {
		@media (min-width: $lg-min) and (max-width: $lg-max) { @content; }
	}
	@else if $class == lg-down {
		@media screen and (max-width: $lg-max) { @content; }
	}
	@else if $class == lg-up {
		@media (min-width: $lg-min) { @content; }
	}
	@else if $class == xl {
		@media (min-width: $xl-min) { @content; }
	}
	@else {
		@warn "Breakpoint mixin supports: xs, sm, md, lg, xl";
	}
}

/*======================================
=         MOTION & TRANSITIONS         =
======================================*/
%transition-fast {
	transition: all $speed-150 $ease-standard;
}
%transition-medium {
	transition: all $speed-350 $ease-standard;
}

// For animating elements that enter and exit with fade
%transition-fade-in {
	transition: all $speed-150 $ease-standard;
}
%transition-fade-out {
	transition: all $speed-75 $ease-standard;
}

// For animating elements that open and close, eg. side drawers
%transition-open {
	transition: all $speed-250 $ease-standard;
}
%transition-close {
	transition: all $speed-200 $ease-standard;
}

// For animating elements that traverse large portions
%transition-expand {
	transition: all $speed-300 $ease-standard;
}
%transition-collapse {
	transition: all $speed-250 $ease-standard;
}

// For animating gradient backgrounds
%transition-gradient {
	transition: all $speed-350 $ease-decelerate-fast;
}

// For animating very large elements that traverse large portions of screen
%transition-expand-large,
%transition-collapse-large {
	transition: all $speed-700 $ease-standard;
}

/*======================================
=            NO GUTTER CODE            =
======================================*/
.no-gutter {
	padding-right:0;
	padding-left:0;
}

/*======================================
=         INVERSE DARK COLORS          =
======================================*/
.container--inverse {
	h1,h2,h3,h4,h5,h6,p,b,span,li {
		color: #fff;
	}
}

.page-box {
	box-shadow: $shadow-large;
	background: #FFFFFF;
	padding-top: 60px;
	padding-bottom: 60px;
	border-radius: $border-radius-default;
}
.offset-top {
	position: relative;
	top: -270px;
}

.text-center {
	text-align: center;
}

.section-space {
	padding-top: $space-xxlarge;
	@include breakpoint(xs) {
		padding-top: $space-small;
	}
}

/*======================================
=             BACKGROUNDS              =
======================================*/
.background-gradient {
	background: #f9f9f9;
	background: -moz-linear-gradient(top, #f9f9f9 10%, #ffffff 47%);
	background: -webkit-linear-gradient(top, #f9f9f9 10%,#ffffff 47%);
	background: linear-gradient(to bottom, #f9f9f9 10%,#ffffff 47%);
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#f9f9f9', endColorstr='#ffffff',GradientType=0 );
}

@mixin heading-font {
	font-family: trumpgothicpro, sans-serif;
	text-transform: uppercase;
	font-weight: bold;
}